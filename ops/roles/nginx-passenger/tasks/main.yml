---
- name: remove apache2, nginx and passenger
  apt: name={{ item }} state=absent
  with_items:
    - apache2
    - nginx
    - passenger

- name: Phusion Passenger - add APT key
  apt_key: keyserver=keyserver.ubuntu.com id=561F9B9CAC40B2F7 state=present

- name: Phusion Passenger - add APT repository
  apt_repository:
    repo: deb https://oss-binaries.phusionpassenger.com/apt/passenger {{ ansible_distribution_release }} main
    state: present

- name: Find ubuntu/debian distro short name
  shell: >
    lsb_release -c | cut -d: -f2 | sed 's/\s//g'
  register: distro

- name: Phusion Passenger - add source
  template: src=passenger.list dest=/etc/apt/sources.list.d/passenger.list owner=root group=root mode=0600

- name: Phusion Passenger - install packages
  apt: name={{ item }} state=present
  with_items:
    - nginx-extras
    - passenger

- name: Phusion Passenger - ensure passenger.conf included in nginx.conf
  lineinfile:
    dest=/etc/nginx/nginx.conf
    state=present
    backup=yes
    regexp='passenger.conf'
    line='include /etc/nginx/passenger.conf;'

- name: Phusion Passenger - ensure passenger_root is excluded
  lineinfile:
    dest=/etc/nginx/nginx.conf
    state=absent
    backup=yes
    regexp='passenger_root'

- name: nginx - remove the default app
  file:
    state: absent
    path: /etc/nginx/sites-enabled/default

- name: nginx - remove the app symlink if exists
  file:
    state: absent
    path: /etc/nginx/sites-enabled/{{ app_name }}

- name: generate a UUID for SECRET_KEY_BASE env var
  command: "uuidgen"
  register: uuidgen_output

- set_fact:
    secret_key_base: "{{ uuidgen_output.stdout }}"

- name: nginx - setup config for app
  template: src=etc_nginx_sites-available.conf.j2 dest={{ nginx_conf_file }} group={{ webserver_user }} owner={{ webserver_user }} force=yes

- name: nginx - enable the app
  file:
    state: link
    src: "{{ nginx_conf_file }}"
    dest: /etc/nginx/sites-enabled/{{ app_name }}
  notify: Reload nginx